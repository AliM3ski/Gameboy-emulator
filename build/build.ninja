# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.30

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: gbemu
# Configurations: Debug
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.8


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Debug
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/build/

#############################################
# Utility command for test

build CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build" && C:\msys64\mingw64\bin\ctest.exe --force-new-ctest-process "
  DESC = Running tests...
  pool = console
  restat = 1

build test: phony CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build" && C:\msys64\mingw64\bin\cmake.exe -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build" && C:\msys64\mingw64\bin\cmake.exe --regenerate-during-build -S"C:\Users\AliMe\VsCodeProjects\Gameboy emulator" -B"C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build""
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build list_install_components: phony


#############################################
# Utility command for install

build CMakeFiles/install.util: CUSTOM_COMMAND all
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build" && C:\msys64\mingw64\bin\cmake.exe -P cmake_install.cmake"
  DESC = Install the project...
  pool = console
  restat = 1

build install: phony CMakeFiles/install.util


#############################################
# Utility command for install/local

build CMakeFiles/install/local.util: CUSTOM_COMMAND all
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build" && C:\msys64\mingw64\bin\cmake.exe -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake"
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build install/local: phony CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build CMakeFiles/install/strip.util: CUSTOM_COMMAND all
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build" && C:\msys64\mingw64\bin\cmake.exe -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake"
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build install/strip: phony CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# C:/Users/AliMe/VsCodeProjects/Gameboy emulator/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for STATIC_LIBRARY target emu


#############################################
# Order-only phony target for emu

build cmake_object_order_depends_target_emu: phony || .

build lib/CMakeFiles/emu.dir/bus.c.obj: C_COMPILER__emu_unscanned_Debug C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/lib/bus.c || cmake_object_order_depends_target_emu
  DEFINES = -DHAVE_CONFIG_H
  DEP_FILE = lib\CMakeFiles\emu.dir\bus.c.obj.d
  FLAGS = -g
  INCLUDES = -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2_ttf/include" -I/usr/local/include -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include/SDL2"
  OBJECT_DIR = lib\CMakeFiles\emu.dir
  OBJECT_FILE_DIR = lib\CMakeFiles\emu.dir
  TARGET_COMPILE_PDB = lib\CMakeFiles\emu.dir\emu.pdb
  TARGET_PDB = lib\libemu.pdb

build lib/CMakeFiles/emu.dir/cart.c.obj: C_COMPILER__emu_unscanned_Debug C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/lib/cart.c || cmake_object_order_depends_target_emu
  DEFINES = -DHAVE_CONFIG_H
  DEP_FILE = lib\CMakeFiles\emu.dir\cart.c.obj.d
  FLAGS = -g
  INCLUDES = -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2_ttf/include" -I/usr/local/include -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include/SDL2"
  OBJECT_DIR = lib\CMakeFiles\emu.dir
  OBJECT_FILE_DIR = lib\CMakeFiles\emu.dir
  TARGET_COMPILE_PDB = lib\CMakeFiles\emu.dir\emu.pdb
  TARGET_PDB = lib\libemu.pdb

build lib/CMakeFiles/emu.dir/cpu.c.obj: C_COMPILER__emu_unscanned_Debug C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/lib/cpu.c || cmake_object_order_depends_target_emu
  DEFINES = -DHAVE_CONFIG_H
  DEP_FILE = lib\CMakeFiles\emu.dir\cpu.c.obj.d
  FLAGS = -g
  INCLUDES = -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2_ttf/include" -I/usr/local/include -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include/SDL2"
  OBJECT_DIR = lib\CMakeFiles\emu.dir
  OBJECT_FILE_DIR = lib\CMakeFiles\emu.dir
  TARGET_COMPILE_PDB = lib\CMakeFiles\emu.dir\emu.pdb
  TARGET_PDB = lib\libemu.pdb

build lib/CMakeFiles/emu.dir/cpu_util.c.obj: C_COMPILER__emu_unscanned_Debug C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/lib/cpu_util.c || cmake_object_order_depends_target_emu
  DEFINES = -DHAVE_CONFIG_H
  DEP_FILE = lib\CMakeFiles\emu.dir\cpu_util.c.obj.d
  FLAGS = -g
  INCLUDES = -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2_ttf/include" -I/usr/local/include -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include/SDL2"
  OBJECT_DIR = lib\CMakeFiles\emu.dir
  OBJECT_FILE_DIR = lib\CMakeFiles\emu.dir
  TARGET_COMPILE_PDB = lib\CMakeFiles\emu.dir\emu.pdb
  TARGET_PDB = lib\libemu.pdb

build lib/CMakeFiles/emu.dir/emu.c.obj: C_COMPILER__emu_unscanned_Debug C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/lib/emu.c || cmake_object_order_depends_target_emu
  DEFINES = -DHAVE_CONFIG_H
  DEP_FILE = lib\CMakeFiles\emu.dir\emu.c.obj.d
  FLAGS = -g
  INCLUDES = -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2_ttf/include" -I/usr/local/include -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include/SDL2"
  OBJECT_DIR = lib\CMakeFiles\emu.dir
  OBJECT_FILE_DIR = lib\CMakeFiles\emu.dir
  TARGET_COMPILE_PDB = lib\CMakeFiles\emu.dir\emu.pdb
  TARGET_PDB = lib\libemu.pdb

build lib/CMakeFiles/emu.dir/instructions.c.obj: C_COMPILER__emu_unscanned_Debug C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/lib/instructions.c || cmake_object_order_depends_target_emu
  DEFINES = -DHAVE_CONFIG_H
  DEP_FILE = lib\CMakeFiles\emu.dir\instructions.c.obj.d
  FLAGS = -g
  INCLUDES = -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2_ttf/include" -I/usr/local/include -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include/SDL2"
  OBJECT_DIR = lib\CMakeFiles\emu.dir
  OBJECT_FILE_DIR = lib\CMakeFiles\emu.dir
  TARGET_COMPILE_PDB = lib\CMakeFiles\emu.dir\emu.pdb
  TARGET_PDB = lib\libemu.pdb

build lib/CMakeFiles/emu.dir/ppu.c.obj: C_COMPILER__emu_unscanned_Debug C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/lib/ppu.c || cmake_object_order_depends_target_emu
  DEFINES = -DHAVE_CONFIG_H
  DEP_FILE = lib\CMakeFiles\emu.dir\ppu.c.obj.d
  FLAGS = -g
  INCLUDES = -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2_ttf/include" -I/usr/local/include -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include/SDL2"
  OBJECT_DIR = lib\CMakeFiles\emu.dir
  OBJECT_FILE_DIR = lib\CMakeFiles\emu.dir
  TARGET_COMPILE_PDB = lib\CMakeFiles\emu.dir\emu.pdb
  TARGET_PDB = lib\libemu.pdb

build lib/CMakeFiles/emu.dir/timer.c.obj: C_COMPILER__emu_unscanned_Debug C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/lib/timer.c || cmake_object_order_depends_target_emu
  DEFINES = -DHAVE_CONFIG_H
  DEP_FILE = lib\CMakeFiles\emu.dir\timer.c.obj.d
  FLAGS = -g
  INCLUDES = -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2_ttf/include" -I/usr/local/include -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include/SDL2"
  OBJECT_DIR = lib\CMakeFiles\emu.dir
  OBJECT_FILE_DIR = lib\CMakeFiles\emu.dir
  TARGET_COMPILE_PDB = lib\CMakeFiles\emu.dir\emu.pdb
  TARGET_PDB = lib\libemu.pdb


# =============================================================================
# Link build statements for STATIC_LIBRARY target emu


#############################################
# Link the static library lib\libemu.a

build lib/libemu.a: C_STATIC_LIBRARY_LINKER__emu_Debug lib/CMakeFiles/emu.dir/bus.c.obj lib/CMakeFiles/emu.dir/cart.c.obj lib/CMakeFiles/emu.dir/cpu.c.obj lib/CMakeFiles/emu.dir/cpu_util.c.obj lib/CMakeFiles/emu.dir/emu.c.obj lib/CMakeFiles/emu.dir/instructions.c.obj lib/CMakeFiles/emu.dir/ppu.c.obj lib/CMakeFiles/emu.dir/timer.c.obj
  LANGUAGE_COMPILE_FLAGS = -g
  OBJECT_DIR = lib\CMakeFiles\emu.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = lib\CMakeFiles\emu.dir\emu.pdb
  TARGET_FILE = lib\libemu.a
  TARGET_PDB = lib\libemu.pdb


#############################################
# Utility command for test

build lib/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\lib" && C:\msys64\mingw64\bin\ctest.exe --force-new-ctest-process "
  DESC = Running tests...
  pool = console
  restat = 1

build lib/test: phony lib/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build lib/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\lib" && C:\msys64\mingw64\bin\cmake.exe -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build lib/edit_cache: phony lib/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build lib/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\lib" && C:\msys64\mingw64\bin\cmake.exe --regenerate-during-build -S"C:\Users\AliMe\VsCodeProjects\Gameboy emulator" -B"C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build""
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build lib/rebuild_cache: phony lib/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build lib/list_install_components: phony


#############################################
# Utility command for install

build lib/CMakeFiles/install.util: CUSTOM_COMMAND lib/all
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\lib" && C:\msys64\mingw64\bin\cmake.exe -P cmake_install.cmake"
  DESC = Install the project...
  pool = console
  restat = 1

build lib/install: phony lib/CMakeFiles/install.util


#############################################
# Utility command for install/local

build lib/CMakeFiles/install/local.util: CUSTOM_COMMAND lib/all
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\lib" && C:\msys64\mingw64\bin\cmake.exe -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake"
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build lib/install/local: phony lib/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build lib/CMakeFiles/install/strip.util: CUSTOM_COMMAND lib/all
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\lib" && C:\msys64\mingw64\bin\cmake.exe -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake"
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build lib/install/strip: phony lib/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# C:/Users/AliMe/VsCodeProjects/Gameboy emulator/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target gbemu


#############################################
# Order-only phony target for gbemu

build cmake_object_order_depends_target_gbemu: phony || cmake_object_order_depends_target_emu

build gbemu/CMakeFiles/gbemu.dir/main.c.obj: C_COMPILER__gbemu_unscanned_Debug C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/gbemu/main.c || cmake_object_order_depends_target_gbemu
  DEFINES = -DHAVE_CONFIG_H
  DEP_FILE = gbemu\CMakeFiles\gbemu.dir\main.c.obj.d
  FLAGS = -g
  INCLUDES = -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2_ttf/include"
  OBJECT_DIR = gbemu\CMakeFiles\gbemu.dir
  OBJECT_FILE_DIR = gbemu\CMakeFiles\gbemu.dir
  TARGET_COMPILE_PDB = gbemu\CMakeFiles\gbemu.dir\
  TARGET_PDB = gbemu\gbemu.pdb


# =============================================================================
# Link build statements for EXECUTABLE target gbemu


#############################################
# Link the executable gbemu\gbemu.exe

build gbemu/gbemu.exe: C_EXECUTABLE_LINKER__gbemu_Debug gbemu/CMakeFiles/gbemu.dir/main.c.obj | lib/libemu.a C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/../windows_deps/sdl2/lib/x64/SDL2.lib C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/../windows_deps/sdl2/lib/x64/SDL2main.lib C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/../windows_deps/sdl2_ttf/lib/x64/SDL2_ttf.lib || lib/libemu.a
  FLAGS = -g
  LINK_LIBRARIES = lib/libemu.a  "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/lib/x64/SDL2.lib"  "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/lib/x64/SDL2main.lib"  "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2_ttf/lib/x64/SDL2_ttf.lib"  -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = gbemu\CMakeFiles\gbemu.dir
  POST_BUILD = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\gbemu" && C:\msys64\mingw64\bin\cmake.exe -E copy "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/NotoSansMono-Medium.ttf" "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build/gbemu" && cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\gbemu" && C:\msys64\mingw64\bin\cmake.exe -E copy "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/lib/x64/SDL2.dll" "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build/gbemu" && cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\gbemu" && C:\msys64\mingw64\bin\cmake.exe -E copy "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2_ttf/lib/x64/SDL2_ttf.dll" "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build/gbemu" && cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\gbemu" && C:\msys64\mingw64\bin\cmake.exe -E copy "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2_ttf/lib/x64/zlib1.dll" "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build/gbemu" && cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\gbemu" && C:\msys64\mingw64\bin\cmake.exe -E copy "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2_ttf/lib/x64/libfreetype-6.dll" "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build/gbemu""
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = gbemu\CMakeFiles\gbemu.dir\
  TARGET_FILE = gbemu\gbemu.exe
  TARGET_IMPLIB = gbemu\libgbemu.dll.a
  TARGET_PDB = gbemu\gbemu.pdb


#############################################
# Utility command for test

build gbemu/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\gbemu" && C:\msys64\mingw64\bin\ctest.exe --force-new-ctest-process "
  DESC = Running tests...
  pool = console
  restat = 1

build gbemu/test: phony gbemu/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build gbemu/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\gbemu" && C:\msys64\mingw64\bin\cmake.exe -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build gbemu/edit_cache: phony gbemu/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build gbemu/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\gbemu" && C:\msys64\mingw64\bin\cmake.exe --regenerate-during-build -S"C:\Users\AliMe\VsCodeProjects\Gameboy emulator" -B"C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build""
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build gbemu/rebuild_cache: phony gbemu/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build gbemu/list_install_components: phony


#############################################
# Utility command for install

build gbemu/CMakeFiles/install.util: CUSTOM_COMMAND gbemu/all
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\gbemu" && C:\msys64\mingw64\bin\cmake.exe -P cmake_install.cmake"
  DESC = Install the project...
  pool = console
  restat = 1

build gbemu/install: phony gbemu/CMakeFiles/install.util


#############################################
# Utility command for install/local

build gbemu/CMakeFiles/install/local.util: CUSTOM_COMMAND gbemu/all
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\gbemu" && C:\msys64\mingw64\bin\cmake.exe -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake"
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build gbemu/install/local: phony gbemu/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build gbemu/CMakeFiles/install/strip.util: CUSTOM_COMMAND gbemu/all
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\gbemu" && C:\msys64\mingw64\bin\cmake.exe -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake"
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build gbemu/install/strip: phony gbemu/CMakeFiles/install/strip.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# C:/Users/AliMe/VsCodeProjects/Gameboy emulator/CMakeLists.txt
# =============================================================================

# =============================================================================
# Object build statements for EXECUTABLE target check_gbe


#############################################
# Order-only phony target for check_gbe

build cmake_object_order_depends_target_check_gbe: phony || cmake_object_order_depends_target_emu

build tests/CMakeFiles/check_gbe.dir/check_gbe.c.obj: C_COMPILER__check_gbe_unscanned_Debug C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/tests/check_gbe.c || cmake_object_order_depends_target_check_gbe
  DEFINES = -DHAVE_CONFIG_H
  DEP_FILE = tests\CMakeFiles\check_gbe.dir\check_gbe.c.obj.d
  FLAGS = -g
  INCLUDES = -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/tests/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/check/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/include" -I"C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2_ttf/include"
  OBJECT_DIR = tests\CMakeFiles\check_gbe.dir
  OBJECT_FILE_DIR = tests\CMakeFiles\check_gbe.dir
  TARGET_COMPILE_PDB = tests\CMakeFiles\check_gbe.dir\
  TARGET_PDB = tests\check_gbe.pdb


# =============================================================================
# Link build statements for EXECUTABLE target check_gbe


#############################################
# Link the executable tests\check_gbe.exe

build tests/check_gbe.exe: C_EXECUTABLE_LINKER__check_gbe_Debug tests/CMakeFiles/check_gbe.dir/check_gbe.c.obj | lib/libemu.a C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/../windows_deps/sdl2/lib/x64/SDL2.lib C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/../windows_deps/sdl2/lib/x64/SDL2main.lib C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/../windows_deps/sdl2_ttf/lib/x64/SDL2_ttf.lib C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/../windows_deps/check/lib/x64/libcheck.a || lib/libemu.a
  FLAGS = -g
  LINK_LIBRARIES = lib/libemu.a  "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/lib/x64/SDL2.lib"  "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2/lib/x64/SDL2main.lib"  "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/sdl2_ttf/lib/x64/SDL2_ttf.lib"  "C:/Users/AliMe/VsCodeProjects/Gameboy emulator/../windows_deps/check/lib/x64/libcheck.a"  -lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32
  OBJECT_DIR = tests\CMakeFiles\check_gbe.dir
  POST_BUILD = cd .
  PRE_LINK = cd .
  TARGET_COMPILE_PDB = tests\CMakeFiles\check_gbe.dir\
  TARGET_FILE = tests\check_gbe.exe
  TARGET_IMPLIB = tests\libcheck_gbe.dll.a
  TARGET_PDB = tests\check_gbe.pdb


#############################################
# Utility command for test

build tests/CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\tests" && C:\msys64\mingw64\bin\ctest.exe --force-new-ctest-process "
  DESC = Running tests...
  pool = console
  restat = 1

build tests/test: phony tests/CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build tests/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\tests" && C:\msys64\mingw64\bin\cmake.exe -E echo "No interactive CMake dialog available.""
  DESC = No interactive CMake dialog available...
  restat = 1

build tests/edit_cache: phony tests/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build tests/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\tests" && C:\msys64\mingw64\bin\cmake.exe --regenerate-during-build -S"C:\Users\AliMe\VsCodeProjects\Gameboy emulator" -B"C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build""
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build tests/rebuild_cache: phony tests/CMakeFiles/rebuild_cache.util


#############################################
# Utility command for list_install_components

build tests/list_install_components: phony


#############################################
# Utility command for install

build tests/CMakeFiles/install.util: CUSTOM_COMMAND tests/all
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\tests" && C:\msys64\mingw64\bin\cmake.exe -P cmake_install.cmake"
  DESC = Install the project...
  pool = console
  restat = 1

build tests/install: phony tests/CMakeFiles/install.util


#############################################
# Utility command for install/local

build tests/CMakeFiles/install/local.util: CUSTOM_COMMAND tests/all
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\tests" && C:\msys64\mingw64\bin\cmake.exe -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake"
  DESC = Installing only the local directory...
  pool = console
  restat = 1

build tests/install/local: phony tests/CMakeFiles/install/local.util


#############################################
# Utility command for install/strip

build tests/CMakeFiles/install/strip.util: CUSTOM_COMMAND tests/all
  COMMAND = C:\WINDOWS\system32\cmd.exe /C "cd /D "C:\Users\AliMe\VsCodeProjects\Gameboy emulator\build\tests" && C:\msys64\mingw64\bin\cmake.exe -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake"
  DESC = Installing the project stripped...
  pool = console
  restat = 1

build tests/install/strip: phony tests/CMakeFiles/install/strip.util

# =============================================================================
# Target aliases.

build check_gbe: phony tests/check_gbe.exe

build check_gbe.exe: phony tests/check_gbe.exe

build emu: phony lib/libemu.a

build gbemu: phony gbemu/gbemu.exe

build gbemu.exe: phony gbemu/gbemu.exe

build libemu.a: phony lib/libemu.a

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build

build all: phony lib/all gbemu/all tests/all

# =============================================================================

#############################################
# Folder: C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build/gbemu

build gbemu/all: phony gbemu/gbemu.exe

# =============================================================================

#############################################
# Folder: C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build/lib

build lib/all: phony lib/libemu.a

# =============================================================================

#############################################
# Folder: C:/Users/AliMe/VsCodeProjects/Gameboy emulator/build/tests

build tests/all: phony tests/check_gbe.exe

# =============================================================================
# Unknown Build Time Dependencies.
# Tell Ninja that they may appear as side effects of build rules
# otherwise ordered by order-only dependencies.

# =============================================================================
# Built-in targets


#############################################
# Phony target to force glob verification run.

build C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/build/CMakeFiles/VerifyGlobs.cmake_force: phony


#############################################
# Re-run CMake to check if globbed directories changed.

build C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/build/CMakeFiles/cmake.verify_globs: VERIFY_GLOBS | C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/build/CMakeFiles/VerifyGlobs.cmake_force
  pool = console
  restat = 1


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/build/CMakeFiles/cmake.verify_globs | C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/build/CMakeFiles/VerifyGlobs.cmake C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/CMakeLists.txt C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/cmake/config.h.in C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/gbemu/CMakeLists.txt C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/lib/CMakeLists.txt C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/tests/CMakeLists.txt C$:/msys64/mingw64/share/cmake/Modules/CMakeCCompiler.cmake.in C$:/msys64/mingw64/share/cmake/Modules/CMakeCCompilerABI.c C$:/msys64/mingw64/share/cmake/Modules/CMakeCInformation.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeCompilerIdDetection.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeDetermineCCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeDetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeDetermineCompilerId.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeDetermineCompilerSupport.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeDetermineSystem.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeFindBinUtils.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeGenericSystem.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeInitializeConfigs.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeLanguageInformation.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeNinjaFindMake.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeParseLibraryArchitecture.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeRCCompiler.cmake.in C$:/msys64/mingw64/share/cmake/Modules/CMakeRCInformation.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeSystem.cmake.in C$:/msys64/mingw64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeTestCCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeTestCompilerCommon.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeTestRCCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckCSourceCompiles.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckCSourceRuns.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckFunctionExists.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckIncludeFile.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckIncludeFileCXX.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckIncludeFiles.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckLibraryExists.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckSymbolExists.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckTypeSize.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/ADSP-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/ARMCC-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/ARMClang-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/AppleClang-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Borland-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Bruce-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Clang-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Clang-DetermineCompilerInternal.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Compaq-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Cray-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/CrayClang-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Embarcadero-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Fujitsu-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/GHS-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/GNU-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/GNU-C.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/GNU-FindBinUtils.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/GNU.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/HP-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/IAR-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Intel-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/LCC-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/MSVC-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/NVHPC-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/NVIDIA-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/OrangeC-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/PGI-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/PathScale-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/SCO-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/SDCC-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/SunPro-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/TI-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/TIClang-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Tasking-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Watcom-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/XL-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/XLClang-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/zOS-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Internal/CMakeDetermineLinkerId.cmake C$:/msys64/mingw64/share/cmake/Modules/Internal/CheckSourceCompiles.cmake C$:/msys64/mingw64/share/cmake/Modules/Internal/CheckSourceRuns.cmake C$:/msys64/mingw64/share/cmake/Modules/Internal/FeatureTesting.cmake C$:/msys64/mingw64/share/cmake/Modules/Platform/Windows-GNU-C-ABI.cmake C$:/msys64/mingw64/share/cmake/Modules/Platform/Windows-GNU-C.cmake C$:/msys64/mingw64/share/cmake/Modules/Platform/Windows-GNU.cmake C$:/msys64/mingw64/share/cmake/Modules/Platform/Windows-Initialize.cmake C$:/msys64/mingw64/share/cmake/Modules/Platform/Windows-windres.cmake C$:/msys64/mingw64/share/cmake/Modules/Platform/Windows.cmake C$:/msys64/mingw64/share/cmake/Modules/Platform/WindowsPaths.cmake CMakeCache.txt CMakeFiles/3.30.1/CMakeCCompiler.cmake CMakeFiles/3.30.1/CMakeRCCompiler.cmake CMakeFiles/3.30.1/CMakeSystem.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/build/CMakeFiles/VerifyGlobs.cmake C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/CMakeLists.txt C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/cmake/config.h.in C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/gbemu/CMakeLists.txt C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/lib/CMakeLists.txt C$:/Users/AliMe/VsCodeProjects/Gameboy$ emulator/tests/CMakeLists.txt C$:/msys64/mingw64/share/cmake/Modules/CMakeCCompiler.cmake.in C$:/msys64/mingw64/share/cmake/Modules/CMakeCCompilerABI.c C$:/msys64/mingw64/share/cmake/Modules/CMakeCInformation.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeCommonLanguageInclude.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeCompilerIdDetection.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeDetermineCCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeDetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeDetermineCompilerABI.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeDetermineCompilerId.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeDetermineCompilerSupport.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeDetermineRCCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeDetermineSystem.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeFindBinUtils.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeGenericSystem.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeInitializeConfigs.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeLanguageInformation.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeNinjaFindMake.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeParseImplicitIncludeInfo.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeParseImplicitLinkInfo.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeParseLibraryArchitecture.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeRCCompiler.cmake.in C$:/msys64/mingw64/share/cmake/Modules/CMakeRCInformation.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeSystem.cmake.in C$:/msys64/mingw64/share/cmake/Modules/CMakeSystemSpecificInformation.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeTestCCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeTestCompilerCommon.cmake C$:/msys64/mingw64/share/cmake/Modules/CMakeTestRCCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckCSourceCompiles.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckCSourceRuns.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckFunctionExists.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckIncludeFile.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckIncludeFileCXX.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckIncludeFiles.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckLibraryExists.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckSymbolExists.cmake C$:/msys64/mingw64/share/cmake/Modules/CheckTypeSize.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/ADSP-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/ARMCC-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/ARMClang-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/AppleClang-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Borland-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Bruce-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Clang-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Clang-DetermineCompilerInternal.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Compaq-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Cray-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/CrayClang-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Embarcadero-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Fujitsu-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/FujitsuClang-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/GHS-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/GNU-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/GNU-C.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/GNU-FindBinUtils.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/GNU.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/HP-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/IAR-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/IBMCPP-C-DetermineVersionInternal.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/IBMClang-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Intel-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/IntelLLVM-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/LCC-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/MSVC-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/NVHPC-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/NVIDIA-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/OpenWatcom-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/OrangeC-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/PGI-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/PathScale-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/SCO-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/SDCC-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/SunPro-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/TI-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/TIClang-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Tasking-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/TinyCC-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/VisualAge-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/Watcom-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/XL-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/XLClang-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Compiler/zOS-C-DetermineCompiler.cmake C$:/msys64/mingw64/share/cmake/Modules/Internal/CMakeDetermineLinkerId.cmake C$:/msys64/mingw64/share/cmake/Modules/Internal/CheckSourceCompiles.cmake C$:/msys64/mingw64/share/cmake/Modules/Internal/CheckSourceRuns.cmake C$:/msys64/mingw64/share/cmake/Modules/Internal/FeatureTesting.cmake C$:/msys64/mingw64/share/cmake/Modules/Platform/Windows-GNU-C-ABI.cmake C$:/msys64/mingw64/share/cmake/Modules/Platform/Windows-GNU-C.cmake C$:/msys64/mingw64/share/cmake/Modules/Platform/Windows-GNU.cmake C$:/msys64/mingw64/share/cmake/Modules/Platform/Windows-Initialize.cmake C$:/msys64/mingw64/share/cmake/Modules/Platform/Windows-windres.cmake C$:/msys64/mingw64/share/cmake/Modules/Platform/Windows.cmake C$:/msys64/mingw64/share/cmake/Modules/Platform/WindowsPaths.cmake CMakeCache.txt CMakeFiles/3.30.1/CMakeCCompiler.cmake CMakeFiles/3.30.1/CMakeRCCompiler.cmake CMakeFiles/3.30.1/CMakeSystem.cmake: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
